legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(0.99,0.99),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue",
size=40,
hjust = 0.5,
family="Arial Black"))
View(movies)
# Add Colour (Aesthetics)
ggplot(data=movies,mapping=aes(x=CriticRating,y=AudienceRating,
Genre,colour=Genre)) +
geom_point()
# ----------------------------------------------------------------------------
# Themes
# Finally, we will improve Chart 3
o <- ggplot(data=movies,aes(x=BudgetMillions))
o + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black")
# Axes Labels
o + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black") +
xlab("Money") +
ylab("Number of Movies")
# Legend Formatting
o + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black") +
xlab("Money") +
ylab("Number of Movies") +
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(0.99,0.99),
legend.justification = c(1,1))
o + geom_histogram(binwidth = 10, aes(fill=Genre),
colour="Black") +
xlab("Money") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x = element_text(colour="DarkGreen",size=30),
axis.title.y = element_text(colour="Red",size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=30),
legend.text = element_text(size=20),
legend.position = c(0.99,0.99),
legend.justification = c(1,1),
plot.title = element_text(colour="DarkBlue",
size=40,
hjust = 0.5,
family="Arial Black"))
library(ggplot2)
# Load Data
getwd()
setwd("C:\\Users\\Daniel.Inacio\\Desktop\\R Programming A-Z\\Section 6 - Advanced Visualization")
movieHW <- read.csv("Section6-Homework-Data.csv",stringsAsFactors = TRUE)
View(movieHW)
head(movieHW)
# Renaming specific columns
names()[names(movieHW) == "Day.of.Week"] <- "WeekDay"
# Renaming specific columns
names(movieHW)[names(movieHW) == "Day.of.Week"] <- "WeekDay"
names(movieHW)[names(movieHW) == "Movie.Title"] <- "MovieTitle"
names(movieHW)[names(movieHW) == "Release.Date"] <- "ReleaseDate"
head(movieHW)
# Renaming specific columns
# names(movieHW)[names(movieHW) == "Day.of.Week"] <- "WeekDay"
colnames(movies) <- c("WeekDay","Director","Genre","MovieTitle","ReleaseDate",
"Studio","AdjGross","Budget","Gross","IMDBRating",
"MovieLensRating","Overseas","Overseas%",
"Profit","Profit%","Runtime","US","GrossUS%")
# Renaming specific columns
# names(movieHW)[names(movieHW) == "Day.of.Week"] <- "WeekDay"
colnames(movieHW) <- c("WeekDay","Director","Genre","MovieTitle","ReleaseDate",
"Studio","AdjGross","Budget","Gross","IMDBRating",
"MovieLensRating","Overseas","Overseas%",
"Profit","Profit%","Runtime","US","GrossUS%")
head(movieHW)
str(movieHW)
summary(movieHW)
# Renaming specific columns
# names(movieHW)[names(movieHW) == "Day.of.Week"] <- "WeekDay"
colnames(movieHW) <- c("WeekDay","Director","Genre","MovieTitle","ReleaseDate",
"Studio","AdjGross","Budget","Gross","IMDBRating",
"MovieLensRating","Overseas","Overseas%",
"Profit","ProfitPer100","Runtime","US","GrossUSPer100")
# Plot
chart <- ggplot(data=movieHW,mapping=aes(x=Genre,y=GrossUSPer100,Studio))
chart + geom_point()
chart + geom_boxplot()
# Plot
chart <- ggplot(data=movieHW,mapping=aes(x=Genre,y=GrossUSPer100,
colour=Studio))
chart + geom_boxplot()
# Filtering the dataframe
filteredMovieHW <- movieHW[movieHW$Studio == "Buena Vista Studios" &
movieHW$Studio == "Fox" &
movieHW$Studio == "Paramount Pictures" &
movieHW$Studio == "Sony" &
movieHW$Studio == "Universal" &
movieHW$Studio == "WB"]
# Filtering the dataframe
filteredMovieHW <- movieHW[movieHW$Studio == "Buena Vista Studios" |
movieHW$Studio == "Fox" |
movieHW$Studio == "Paramount Pictures" |
movieHW$Studio == "Sony" |
movieHW$Studio == "Universal" |
movieHW$Studio == "WB"]
# Filtering the dataframe
filteredMovieHW <- movieHW[movieHW$Studio == "Buena Vista Studios" | movieHW$Studio == "Fox" |
movieHW$Studio == "Paramount Pictures" |
movieHW$Studio == "Sony" |
movieHW$Studio == "Universal" |
movieHW$Studio == "WB"]
# Filtering the dataframe
filteredMovieHW <- movieHW[movieHW$Studio == "Buena Vista Studios" | movieHW$Studio == "Fox" | movieHW$Studio == "Paramount Pictures" | movieHW$Studio == "Sony" | movieHW$Studio == "Universal" | movieHW$Studio == "WB"]
# Filtering the dataframe
filteredMovieHW <- movieHW[movieHW$Studio == "Buena Vista Studios" ||
movieHW$Studio == "Fox" ||
movieHW$Studio == "Paramount Pictures" ||
movieHW$Studio == "Sony" ||
movieHW$Studio == "Universal" ||
movieHW$Studio == "WB"]
View(filteredMovieHW)
# Filtering the dataframe
filteredMovieHW <- movieHW[movieHW$Studio == "Buena Vista Studios" ||
movieHW$Studio == "Fox" ||
movieHW$Studio == "Paramount Pictures" ||
movieHW$Studio == "Sony" ||
movieHW$Studio == "Universal" ||
movieHW$Studio == "WB",]
View(filteredMovieHW)
# Filtering the dataframe
filteredMovieHW <- movieHW[movieHW$Studio == "Buena Vista Studios" |
movieHW$Studio == "Fox" |
movieHW$Studio == "Paramount Pictures" |
movieHW$Studio == "Sony" |
movieHW$Studio == "Universal" |
movieHW$Studio == "WB",]
View(filteredMovieHW)
relevantMovies <- filteredMovieHW[filteredMovieHW$Genre == "action" |
filteredMovieHW$Genre == "adventure" |
filteredMovieHW$Genre == "animation" |
filteredMovieHW$Genre == "comedy" |
filteredMovieHW$Genre == "drama",]
View(relevantMovies)
View(filteredMovieHW)
# Redo the chart
newChart <- ggplot(data=relevantMovies,mapping=aes(x=Genre,y=GrossUSPer100,
colour=Studio))
newChart + geom_boxplot()
# Redo the chart
newChart <- ggplot(data=relevantMovies,mapping=aes(x=Genre,y=GrossUSPer100,
Genre,colour=Studio))
newChart + geom_boxplot()
# Redo the chart
newChart <- ggplot(data=relevantMovies,mapping=aes(x=Genre,y=GrossUSPer100,
Budget,colour=Studio))
newChart + geom_boxplot()
newChart + geom_boxplot(aes(fill=Genre))
newChart + geom_boxplot()
newChart + geom_jitter() + geom_boxplot(alpha=0.5)
str(movies)
str(movieHW)
# Interesting Insight
ggplot(movieHW,aes(x=WeekDay)) + geom_bar()
newChart + geom_jitter() + geom_boxplot(alpha=0.5)
newChart + geom_jitter() + geom_box(alpha=0.5)
newChart + geom_jitter() + geom_boxplot(alpha=0.5)
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US")
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre")
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=40,
hjust = 0.5,
family="Arial Black"))
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Arial Black"))
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans"))
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"))
# Redo the chart
windowsFonts("Comic Sans MS" = windowsFont("Comic Sans MS"))
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"))
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(family="Comic Sans MS"),
axis.title.y = element_text(family="Comic Sans MS"))
newChart + geom_jitter() + geom_boxplot(alpha=0.5) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
family="Comic Sans MS"))
newChart + geom_jitter() + geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
family="Comic Sans MS"))
newChart <- ggplot(data=relevantMovies,mapping=aes(x=Genre,y=GrossUSPer100,
colour=Studio,
size=Budget))
newChart + geom_jitter() + geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
family="Comic Sans MS"))
newChart <- ggplot(data=relevantMovies,mapping=aes(x=Genre,y=GrossUSPer100))
newChart+geom_boxplot()
newChart + geom_jitter() + geom_boxplot(alpha=0.7)
newChart + geom_jitter() + geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US")
newChart + geom_jitter() + geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS")
newChart + geom_jitter() + geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"))
newChart + geom_jitter() + geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre")
newChart + geom_jitter(aes(colour=Studio)) + geom_boxplot(alpha=0.7)
newChart +
geom_jitter(aes(colour=Studio,size=Budget)) +
geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre")
newChart +
geom_jitter(aes(colour=Studio,size=Budget)) +
geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
family="Comic Sans MS"),
legend.position = c(0.99,0.99),
legend.justification = c(1,1))
# And now all the improvements
# Notice colour and size changes are only on the jitter, not on the boxplots!
newChart +
geom_jitter(aes(colour=Studio,size=Budget)) +
geom_boxplot(alpha=0.7) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
family="Comic Sans MS"))
# And now all the improvements
# Notice colour and size changes are only on the jitter, not on the boxplots!
newChart +
geom_jitter(aes(colour=Studio,size=Budget)) +
geom_boxplot(alpha=0.7,outlier.colour = NA) +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre") +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
family="Comic Sans MS"))
# And now the chart improvements
# Notice colour and size changes are only on the jitter, not on the boxplots!
# Notice the "outlier.colour=NA" to remove outliers
# Notive the finalChart as a way to "Save" our work
newChart2 <- newChart +
geom_jitter(aes(colour=Studio,size=Budget)) +
geom_boxplot(alpha=0.7,outlier.colour = NA)
newChart + geom_boxplot()
# And now the chart improvements
# Notice colour and size changes are only on the jitter, not on the boxplots!
# Notice the "outlier.colour=NA" to remove outliers
# Notive the finalChart as a way to "Save" our work
newChart2 <- newChart +
geom_jitter(aes(colour=Studio,size=Budget)) +
geom_boxplot(alpha=0.7,outlier.colour = NA)
newChart2
# And finally the visual changes
# Labelling
newChart2 +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre")
# And now the chart improvements
# Notice colour and size changes are only on the jitter, not on the boxplots!
# Notice the "outlier.colour=NA" to remove outliers
# Notice the finalChart as a way to "Save" our work
newChart2 <- newChart +
geom_jitter(aes(colour=Studio,size=Budget)) +
geom_boxplot(alpha=0.7,outlier.colour = NA)
newChart2
# And finally the visual changes
# Labelling
newChart2 +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre")
# And finally the visual changes
# Labelling
finalChart <- newChart2 +
xlab("Genre") +
ylab("Gross% US") +
ggtitle("Domestic Gross % by Genre")
finalChart
# Theme
finalChart +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
size=30,
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
size=30
family="Comic Sans MS"))
# Theme
finalChart +
theme(plot.title = element_text(size=20,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
size=30,
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
size=30,
family="Comic Sans MS"))
# Theme
finalChart +
theme(plot.title = element_text(size=30,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
size=20,
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
size=20,
family="Comic Sans MS"))
# Theme
finalChart +
theme(plot.title = element_text(size=30,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
size=30,
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
size=30,
family="Comic Sans MS"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20))
# Theme
finalChart +
theme(plot.title = element_text(size=40,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
size=30,
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
size=30,
family="Comic Sans MS"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20))
# Theme
finalChart +
theme(plot.title = element_text(size=40,
hjust = 0.5,
family="Comic Sans MS"),
axis.title.x = element_text(colour="Blue",
size=30,
family="Comic Sans MS"),
axis.title.y = element_text(colour="Blue",
size=30,
family="Comic Sans MS"),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20))
# Redo the chart
windowsFonts("EY Gothic" = windowsFont("EY Gothic"))
# Theme
finalChart +
theme(plot.title = element_text(size=40,
hjust = 0.5),
axis.title.x = element_text(colour="Blue",
size=30),
axis.title.y = element_text(colour="Blue",
size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20),
text = element.text("EY Gothic"))
# Redo the chart
windowsFonts("EY Gothic" = windowsFont("EY Gothic"))
# Theme
finalChart +
theme(plot.title = element_text(size=40,
hjust = 0.5),
axis.title.x = element_text(colour="Blue",
size=30),
axis.title.y = element_text(colour="Blue",
size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20),
text = element.text(family="EY Gothic"))
# Theme
finalChart +
theme(plot.title = element_text(size=40,
hjust = 0.5),
axis.title.x = element_text(colour="Blue",
size=30),
axis.title.y = element_text(colour="Blue",
size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20),
text = element_text(family="EY Gothic"))
# Final Touch: Unit in the legend!
finalChart$labels$size <- "Budget M$"
# Theme
finalChart +
theme(plot.title = element_text(size=40,
hjust = 0.5),
axis.title.x = element_text(colour="Blue",
size=30),
axis.title.y = element_text(colour="Blue",
size=30),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20),
legend.title = element_text(size=20),
legend.text = element_text(size=20),
text = element_text(family="EY Gothic"))
