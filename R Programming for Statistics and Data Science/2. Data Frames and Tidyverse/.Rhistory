myTry <- c(7,39,21,24,35,32)
if(length(myTry) != 6){
print("Invalid ticket. Choose 6 values")
} else{
if(length(setdiff(myTry,lottery)) == 0){
print("Congrats!")
} else
print("Lost...")
}
myTry <- c(7,39,20,24,35,32)
if(length(myTry) != 6){
print("Invalid ticket. Choose 6 values")
} else{
if(length(setdiff(myTry,lottery)) == 0){
print("Congrats!")
} else
print("Lost...")
}
?for(i in ){
}
?for
?for
?for()
?for
n <- 10
result <- 0
n <- 10
result <- 0
for(i in 1:n){
result <- result + i
if(result == n)
break
}
result <- 0
for(i in 1:n){
result <- result + 1
if(result == n)
break
}
n <- 10
result <- 0
for(i in 1:n){
result <- result + 1
}
n <- 10
result <- 0
# ----------------------------------------------------------------------------
# Exercise 19: For/While Loops in R
n <- 1
while(n < 10){
result <- result + 1
n <- n+1
}
while(n <= 10){
result <- result + 1
n <- n+1
}
n <- 0
result <- 0
while(n < 10){
result <- result + 1
n <- n+1
}
# ----------------------------------------------------------------------------
# Creating a Data Frame
months <- c(53,19,34,41,84,140,109)
size <- c("medium","small","medium","large","small","small","large")
weight <- c(21,8,4,6,7,2,36)
breed <- c("dog","dog","cat","cat","dog","cat","dog")
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed)
View(my.dataframe)
View(my.dataframe)
rownames(data.frame <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie"))
View(my.dataframe)
rownames(data.frame,c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie"))
View(my.dataframe)
?row.names
row.names(data.frame) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie"))
row.names(data.frame) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
View(my.dataframe)
str(my.dataframe)
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
str(my.dataframe)
# Swapping dogs for cats
my.factors <- factor(my.dataframe,
levels = c("cat","dog"),
labels = c("dog","cat"))
months <- c(53,19,34,41,84,140,109)
size <- c("medium","small","medium","large","small","small","large")
weight <- c(21,8,4,6,7,2,36)
breed <- c("dog","dog","cat","cat","dog","cat","dog")
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
rm(breed,months,size,weight)
str(my.dataframe)
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("dog","cat")
my.dataframe
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
my.dataframe
my.dataframe
r
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("dog","cat")
my.dataframe
str(my.dataframe)
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
my.dataframe
str(my.dataframe)
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("dog","cat")
my.dataframe
str(my.dataframe)
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("cat","dog")
my.dataframe
str(my.dataframe)
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
my.dataframe
str(my.dataframe)
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("cat","dog")
my.dataframe
str(my.dataframe)
months <- c(53,19,34,41,84,140,109)
size <- c("medium","small","medium","large","small","small","large")
weight <- c(21,8,4,6,7,2,36)
breed <- c("dog","dog","cat","cat","dog","cat","dog")
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
my.dataframe
str(my.dataframe)
rm(breed,months,size,weight)
# ----------------------------------------------------------------------------
# Tidyverse Package
install.packages("tidyverse")
library(tidyverse)
# Manipulating Data: Dplyr and Tidyr Packages
library(tidyverse)
star <- starwars
View(star)
View(star)
star
# filter(...)
filter(star,species=="Droid")
star
# Initial Analysis
str(star)
star[,"Droid"]
View(star)
# filter(...)
filter(star,species="Droid")
star[,species=="Droid"]
star[,species]
star[,1]
View(star)
star[,"name"]
star[,"species"]
star["species"]
star[,species]
star[,"species"]
star[,"species"=="Droid"]
# filter(...)
filter(star,species=="Droid")
star[,"species"=="Droid"]
star[,"species"="Droid"]
star[,"species"="Droid"]
star[star$species=="Droid"]
star[,star$species=="Droid"]
star$species=="Droid"
View(star)
filter <- star$species=="Droid"
star[,filter]
is.data.frame(star)
star[,t(filter)]
star[filter,]
filter <- (star$species=="Droid") & (complete.cases(star))
filter <- (star$species=="Droid") & (!is.na(star$species))
star[filter,]
filter <- (star$species=="Droid") & (complete.cases(star))
# filter(...)
filter(star,species=="Droid")
star[filter,]
# filter(...)
filter(star,species=="Droid")
filter <- (star$species=="Droid") & (complete.cases(star))
filter <- star$species=="Droid"
star[filter,]
filter <- (star$species=="Droid") & (!is.na(star$name))
star[filter,]
filter <- (star$species=="Droid") & (!is.na(star$name))
star[filter,]
filter <- (star$species=="Droid") & (!is.na(star$species))
star[filter,]
view(star[filter,])
# OR
star[(star$species=="Droid") & (!is.na(star$species)),]
view(star[(star$species=="Droid") & (!is.na(star$species)),])
# filter(...)
filter(star,species=="Droid")
# OR
star[(star$species=="Droid") & (!is.na(star$species)),]
filter(star,species=="Droid",homeworld=="Tatooine")
# select(...) - keep the columns you want
select(star,name,birth_year,homeworld,species,starships)
select(star,name,homeworld:species)
select(star,ends_with("color"))
select(star,name,vehicles,starships,everything())
# mutate(...) - adds a new variable and preserves the rest
?mutate()
# mutate(...) - adds a new variable and preserves the rest
star <- mutate(star,bmi=mass/((height/100)^2))
select(star,name,bmi)
# Load Star Wars dataset (included with dplyr)
# TIBBLE DATASET!
star <- starwars
# OR
star$bmi <- star$mass/((star$height/100)^2)
star
star$bmi
select(star,name,bmi)
# arrange(...)
arrange(star,desc(mass))
# Manipulating Data: Dplyr and Tidyr Packages
library(tidyverse)
# arrange(...)
arrange(star,desc(mass))
View(star)
# summarize(...)
summarize(star,avg.height=mean(height,na.rm=TRUE))
# group_by(...) - splits data into groups
star$species <- group_by(species)
star$species
# group_by(...) - splits data into groups
star$species <- group_by(star,species)
View(star)
star$species
View(star)
# Load Star Wars dataset (included with dplyr)
# TIBBLE DATASET!
star <- starwars
star
View(star)
# group_by(...) - splits data into groups
star.species <- group_by(star,species)
star.species
View(star.species)
summarize(star.species)
summarize(star.species,avg.height=mean(height,na.rm=TRUE))
# sample(...)
sample(star,10)
View(star)
# sample(...)
sample(star,10)
sample_frac(star,0.1) # get 10% of my dataset
n()
# If I wanted the average mass and total count of each species
star.species <- group_by(star,species)
star.smr <- summarize(star.species,count = n(), avg.mass=mean(mass,na.rm=TRUE))
filter(star.smr,count>1)
# Using the Pipe Operator (you could nest but reading it would be too much!)
star %>%
group_by(species) %>%
summarize(count = n(), mass=mean(mass,na.rm=TRUE)) %>%
filter(count>1)
# ------------------------------------------------------------------------------
# Exercise with the employees dataset
employee.data <- read.csv("employee_data_exported.csv",
stringsAsFactors = FALSE)
setwd(paste("C:\\Users\\Daniel.Inacio\\Desktop",
"\\R Programming for Statistics and Data Science",
"\\2. Data Frames and Tidyverse",
sep=""))
employee.data <- read.csv("employee_data_exported.csv",
stringsAsFactors = FALSE)
View(employee.data)
# Convert to tibble
?tibble
tibble(employee.data)
str(employee.data)
?factor
# Change relevant data to factors
employee.data <- factor(Gender)
# Change relevant data to factors
employee.data <- factor(employee.data$Gender)
str(employee.data)
getwd()
setwd(paste("C:\\Users\\Daniel.Inacio\\Desktop",
"\\R Programming for Statistics and Data Science",
"\\2. Data Frames and Tidyverse",
sep=""))
employee.data <- read.csv("employee_data_exported.csv",
stringsAsFactors = FALSE)
factor(employee.data$Gender)
str(employee.data)
# Change relevant data to factors
employee.data$Gender <- factor(employee.data$Gender)
str(employee.data)
View(employee.data)
employee.data$Job.Title <- factor(employee.data$Job.Title)
str(employee.data)
View(employee.data)
str(employee.data)
?which
# Check for missing data
summary(employee.data)
employee.data[!complete.cases(employee.data),]
any(is.na(employee.data))
# Arrange by gender
arrange(employee.data,Gender)
View(employee.data)
# Arrange by gender
employee.data <- arrange(employee.data,Gender)
View(employee.data)
# Arrange by gender
employee.data <- arrange(employee.data,asc(Gender))
# Arrange by gender
employee.data <- arrange(employee.data,desc(Gender))
View(employee.data)
?arrange
View(employee.data)
employee.data <- arrange(employee.data,Last.Name)
View(employee.data)
# Specify the first 3 columns you want to see
employee.data <- select(employee.data,
First.Name,Last.Name,Gender,
everything())
View(employee.data)
getwd()
setwd(paste("C:\\Users\\Daniel.Inacio\\Desktop",
"\\R Programming for Statistics and Data Science",
"\\2. Data Frames and Tidyverse",
sep=""))
employee.data <- read.csv("employee_data_exported.csv",
stringsAsFactors = FALSE)
View(employee.data)
# Convert to tibble
tibble(employee.data)
str(employee.data)
employee.data$Gender <- factor(employee.data$Gender)
employee.data$Job.Title <- factor(employee.data$Job.Title)
str(employee.data)
summary(employee.data)
employee.data[!complete.cases(employee.data),] # 0 lines completely empty
any(is.na(employee.data)) # FALSE
employee.data <- arrange(employee.data,desc(Gender))
employee.data <- arrange(employee.data,Last.Name)
# Specify the first 3 columns you want to see
employee.data <- select(employee.data,
First.Name,Last.Name,Gender,
everything())
View(employee.data)
View(employee.data)
employee.data[employee.data$Salary > 70000]
employee.data[employee.data$Salary > 70000,]
HighSalary <- employee.data[employee.data$Salary > 70000,]
View(HighSalary)
# How much does each Job Title earns on average by gender?
HighSalary.Avg <- group_by(HighSalary,Job.Title)
HighSalary.Avg
View(HighSalary.Avg)
summarize(HighSalary.Avg,avg.salary=mean(Salary,na.rm=TRUE))
HighSalary.Avg <- summarize(HighSalary.Avg,avg.salary=mean(Salary,na.rm=TRUE))
View(HighSalary.Avg)
# How much does each Job Title earns on average by gender?
HighSalary.Avg <- group_by(HighSalary,Gender)
View(HighSalary)
View(HighSalary.Avg)
HighSalary.Avg <- summarize(HighSalary.Avg,avg.salary=mean(Salary,na.rm=TRUE))
View(HighSalary.Avg)
?group_by
# How much does each Job Title earns on average by gender?
HighSalary.Avg <- group_by(HighSalary,Job.Title,Gender)
HighSalary.Avg
View(HighSalary.Avg)
HighSalary.Avg <- summarize(HighSalary.Avg,avg.salary=mean(Salary,na.rm=TRUE))
View(HighSalary.Avg)
mean(Salary)
mean(employee.data$Salary)
# Add the new column to your dataset
employee.data.new <- mutate(employee.data,
AvgMonthly=mean(employee.data$Salary)/12)
View(employee.data.new)
View(HighSalary.Avg)
avg.salary/12
HighSalary.Avg$avg.salary/12
# Add the new column to your dataset
employee.data.new <- mutate(employee.data,
AvgMonthly=mean(HighSalary.Avg$avg.salary)/12)
View(employee.data.new)
mean(HighSalary.Avg$avg.salary)
mean(HighSalary.Avg$avg.salary)/12
HighSalary.Avg$avg.salary/12
# Add the new column to your dataset
employee.data.new <- mutate(employee.data,
AvgMonthly=HighSalary.Avg$avg.salary/12)
View(HighSalary.Avg)
# Add the new column to your dataset
employee.data.new <- mutate(HighSalary.Avg,
AvgMonthly=HighSalary.Avg$avg.salary/12)
?mutate
View(HighSalary.Avg)
View(HighSalary)
View(HighSalary)
HighSalary <- employee.data[employee.data$Salary > 70000,Employee.Number]
HighSalary <- employee.data[employee.data$Salary > 70000,
employee.data$Employee.Number]
HighSalary <- employee.data[employee.data$Salary > 70000,
employee.data$Employee.Number,]
HighSalary <- employee.data[employee.data$Salary > 70000,
Employee.Number]
View(HighSalary)
employee.data[employee.data$Employee.Number,]
employee.data[employee.data$Employee.Number,]
View(HighSalary)
HighSalary <- employee.data[,employee.data$Employee.Number]
HighSalary <- employee.data[HighSalary$Employee.Number,]
View(HighSalary)
# Get a dataframe with only the high earners' employee numbers
HighSalary <- employee.data[employee.data$Salary > 70000,]
View(HighSalary)
HighSalary <- employee.data[,HighSalary$Employee.Number]
View(HighSalary)
HighSalary <- employee.data["emp_no"]
HighSalary <- HighSalary[,HighSalary$Employee.Number]
HighSalary <- HighSalary[HighSalary$Employee.Number,]
View(HighSalary)
# Get a dataframe with only the high earners' employee numbers
HighSalary <- employee.data[employee.data$Salary > 70000,]
HighSalary <- HighSalary["Employee.Number",]
View(HighSalary)
# Get a dataframe with only the high earners' employee numbers
HighSalary <- employee.data[employee.data$Salary > 70000,]
HighSalary <- HighSalary["Employee.Number",]
View(HighSalary)
# Get a dataframe with only the high earners' employee numbers
HighSalary <- employee.data[employee.data$Salary > 70000,]
HighSalary <- HighSalary[,"Employee.Number"]
HighSalary <- HighSalary[,"Employee.Number",drop=FALSE]
filter(employee.data$Salary > 70000)
employee.data <- select(employee.data,
First.Name,Last.Name,Gender, # OR ends_with("name")
everything())
# Get a dataframe with only the high earners' employee numbers
HighSalary <- employee.data[employee.data$Salary > 70000,]
# Arrange by gender
HighSalary <- arrange(HighSalary,desc(Gender))
HighSalary <- arrange(HighSalary,Last.Name)
View(HighSalary)
HighSalaryEMP <- HighSalary[,"Employee.Number", drop=FALSE]
View(HighSalaryEMP)
View(HighSalaryEMP)
# B: How much does each Job Title earn on average by gender?
HighSalary.Avg <- group_by(HighSalary,Job.Title,Gender)
HighSalary.Avg <- summarize(HighSalary.Avg,avg.salary=mean(Salary,na.rm=TRUE))
View(HighSalary.Avg)
# Add the new column to your dataset
employee.data.new <- mutate(employee.data,
AvgMonthly=HighSalary.Avg$avg.salary/12)
View(HighSalary.Avg)
# Add the new column to your dataset
employee.data.new <- mutate(HighSalary.Avg,
AvgMonthly=HighSalary.Avg$avg.salary/12)
View(HighSalary.Avg)
HighSalary.Avg$avg.salary/12
?mutate
# Add the new column to your dataset
employee.data.new <- mutate(HighSalary.Avg,
AvgMonthly=avg.salary/12)
View(HighSalary.Avg)
View(employee.data.new)
employee.data.new <- arrange(Gender,desc(AvgMonthly))
View(employee.data.new)
employee.data.new <- arrange(desc(Gender),desc(AvgMonthly))
employee.data.new <- arrange(employee.data.new,
desc(Gender),desc(AvgMonthly))
View(employee.data.new)
