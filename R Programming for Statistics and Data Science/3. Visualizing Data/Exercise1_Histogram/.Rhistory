# Another One
lottery <- round(runif(6,min=1,max=50),0)
lottery
myTry <- c(1,2,3,4,5,6)
myTry
length(myTry)
?setdiff
setdiff(myTry,lottery)
myTry <- c(7,2,3,4,5,6)
setdiff(myTry,lottery)
myTry <- c(7,39,20,24,35,32)
setdiff(myTry,lottery)
length(setdiff(myTry,lottery))
myTry <- c(7,39,20,24,32)
if(length(myTry) != 6){
print("Invalid ticket. Choose 6 values")
} else{
if(length(setdiff(myTry,lottery)) == 0){
print("Congrats!")
} else
print("Lost...")
}
myTry <- c(7,39,21,24,35,32)
if(length(myTry) != 6){
print("Invalid ticket. Choose 6 values")
} else{
if(length(setdiff(myTry,lottery)) == 0){
print("Congrats!")
} else
print("Lost...")
}
myTry <- c(7,39,20,24,35,32)
if(length(myTry) != 6){
print("Invalid ticket. Choose 6 values")
} else{
if(length(setdiff(myTry,lottery)) == 0){
print("Congrats!")
} else
print("Lost...")
}
?for(i in ){
}
?for
?for
?for()
?for
n <- 10
result <- 0
n <- 10
result <- 0
for(i in 1:n){
result <- result + i
if(result == n)
break
}
result <- 0
for(i in 1:n){
result <- result + 1
if(result == n)
break
}
n <- 10
result <- 0
for(i in 1:n){
result <- result + 1
}
n <- 10
result <- 0
# ----------------------------------------------------------------------------
# Exercise 19: For/While Loops in R
n <- 1
while(n < 10){
result <- result + 1
n <- n+1
}
while(n <= 10){
result <- result + 1
n <- n+1
}
n <- 0
result <- 0
while(n < 10){
result <- result + 1
n <- n+1
}
# ----------------------------------------------------------------------------
# Creating a Data Frame
months <- c(53,19,34,41,84,140,109)
size <- c("medium","small","medium","large","small","small","large")
weight <- c(21,8,4,6,7,2,36)
breed <- c("dog","dog","cat","cat","dog","cat","dog")
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed)
View(my.dataframe)
View(my.dataframe)
rownames(data.frame <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie"))
View(my.dataframe)
rownames(data.frame,c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie"))
View(my.dataframe)
?row.names
row.names(data.frame) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie"))
row.names(data.frame) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
View(my.dataframe)
str(my.dataframe)
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
str(my.dataframe)
# Swapping dogs for cats
my.factors <- factor(my.dataframe,
levels = c("cat","dog"),
labels = c("dog","cat"))
months <- c(53,19,34,41,84,140,109)
size <- c("medium","small","medium","large","small","small","large")
weight <- c(21,8,4,6,7,2,36)
breed <- c("dog","dog","cat","cat","dog","cat","dog")
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
rm(breed,months,size,weight)
str(my.dataframe)
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("dog","cat")
my.dataframe
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
my.dataframe
my.dataframe
r
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("dog","cat")
my.dataframe
str(my.dataframe)
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
my.dataframe
str(my.dataframe)
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("dog","cat")
my.dataframe
str(my.dataframe)
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("cat","dog")
my.dataframe
str(my.dataframe)
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
my.dataframe
str(my.dataframe)
# Swapping dogs for cats
levels(my.dataframe[,"Breed"]) = c("cat","dog")
my.dataframe
str(my.dataframe)
months <- c(53,19,34,41,84,140,109)
size <- c("medium","small","medium","large","small","small","large")
weight <- c(21,8,4,6,7,2,36)
breed <- c("dog","dog","cat","cat","dog","cat","dog")
my.dataframe <- data.frame("Months Old"=months,
"Size"=size,
"Weight"=weight,
"Breed"=breed,stringsAsFactors=TRUE)
row.names(my.dataframe) <- c("Flipper","Bromley","Nox","Orion",
"Dagger","Zizi","Carrie")
my.dataframe
str(my.dataframe)
rm(breed,months,size,weight)
# ----------------------------------------------------------------------------
# Tidyverse Package
install.packages("tidyverse")
library(tidyverse)
# Manipulating Data: Dplyr and Tidyr Packages
library(tidyverse)
star <- starwars
View(star)
View(star)
star
# filter(...)
filter(star,species=="Droid")
star
# Initial Analysis
str(star)
star[,"Droid"]
View(star)
# filter(...)
filter(star,species="Droid")
star[,species=="Droid"]
star[,species]
star[,1]
View(star)
star[,"name"]
star[,"species"]
star["species"]
star[,species]
star[,"species"]
star[,"species"=="Droid"]
# filter(...)
filter(star,species=="Droid")
star[,"species"=="Droid"]
star[,"species"="Droid"]
star[,"species"="Droid"]
star[star$species=="Droid"]
star[,star$species=="Droid"]
star$species=="Droid"
View(star)
filter <- star$species=="Droid"
star[,filter]
is.data.frame(star)
star[,t(filter)]
star[filter,]
filter <- (star$species=="Droid") & (complete.cases(star))
filter <- (star$species=="Droid") & (!is.na(star$species))
star[filter,]
filter <- (star$species=="Droid") & (complete.cases(star))
# filter(...)
filter(star,species=="Droid")
star[filter,]
# filter(...)
filter(star,species=="Droid")
filter <- (star$species=="Droid") & (complete.cases(star))
filter <- star$species=="Droid"
star[filter,]
filter <- (star$species=="Droid") & (!is.na(star$name))
star[filter,]
filter <- (star$species=="Droid") & (!is.na(star$name))
star[filter,]
filter <- (star$species=="Droid") & (!is.na(star$species))
star[filter,]
view(star[filter,])
# OR
star[(star$species=="Droid") & (!is.na(star$species)),]
view(star[(star$species=="Droid") & (!is.na(star$species)),])
# filter(...)
filter(star,species=="Droid")
# OR
star[(star$species=="Droid") & (!is.na(star$species)),]
filter(star,species=="Droid",homeworld=="Tatooine")
# select(...) - keep the columns you want
select(star,name,birth_year,homeworld,species,starships)
select(star,name,homeworld:species)
select(star,ends_with("color"))
select(star,name,vehicles,starships,everything())
# mutate(...) - adds a new variable and preserves the rest
?mutate()
# mutate(...) - adds a new variable and preserves the rest
star <- mutate(star,bmi=mass/((height/100)^2))
select(star,name,bmi)
# Load Star Wars dataset (included with dplyr)
# TIBBLE DATASET!
star <- starwars
# OR
star$bmi <- star$mass/((star$height/100)^2)
star
star$bmi
select(star,name,bmi)
# VISUALIZING DATA
library(ggplot)
# VISUALIZING DATA
library(ggplot2)
setwd(paste("C:\\Users\\Daniel.Inacio\\Desktop",
"\\R Programming for Statistics and Data Science",
"\\3. Visualizing Data",
sep=""))
billboard <- read.csv("hdi-cpi.csv.csv",
stringsAsFactors = FALSE)
hdi <- read.csv("hdi-cpi.csv",
stringsAsFactors = FALSE)
View(hdi)
View(hdi)
View(hdi)
# ----------------------------------------------------------------------------
# Scatterplot
sc <- ggplot(data=hdi,aes(x=CPI.2015,y=HDI.2015))
sc
sc + geom_point()
sc + geom_point() + geom_smooth()
sc + geom_point() + facet_grid(~.Region)
sc + geom_point() + facet_grid(.~Region)
sc + geom_point() + facet_grid(Region~.)
.
sc + geom_point() + facet_grid(.~Region)
sc + geom_point() + facet_grid(Region~.)
+ geom_smooth()
sc + geom_point() +
facet_grid(Region~.) +
geom_smooth()
sc + geom_point() +
facet_grid(Region~.) +
stat_smooth()
sc + geom_point() +
facet_grid(Region~.) +
geom_smooth()
sc + geom_point() +
facet_grid(Region~.) +
geom_smooth(colour=Region)
sc + geom_point() +
facet_grid(Region~.) +
geom_smooth()
sc + geom_point() +
facet_grid(Region~.) +
geom_smooth()
sc + geom_point(colour=Region) +
facet_grid(Region~.) +
geom_smooth()
sc + geom_point(aes(colour=Region)) +
facet_grid(Region~.) +
geom_smooth()
sc + geom_point(aes(colour=Region)) +
facet_grid(Region~.) +
stat_smooth()
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth()
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
xlim(0.75,1)
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
coord_cartesian(xlim(0.75,1))
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
coord_cartesian(xlim=c(0.75,1))
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
xlim=(0.75,1)
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
xlim=(0.75,1)
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
xlim(0.75,1)
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
#xlim(0.75,1)
coord_cartesian(xlim=c(0.75,1))
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
xlim(0.75,1)
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
#xlim(0.75,1)
coord_cartesian(xlim=c(0.75,1))
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth()
hdi["CPI.2015" < 0.2]
hdi[("CPI.2015" < 0.2) & "HDI.2015" > 0.85]
hdi[CPI.2015 < 0.2 & HDI.2015 > 0.85]
hdi[hdi$CPI.2015 < 0.2 & hdi$HDI.2015 > 0.85]
hdi[hdi$CPI.2015 < 0.2 & hdi$HDI.2015 > 0.85,]
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
coord_cartesian(xlim=c(0.75,1)) +
theme_minimal()
sc + geom_point(aes(colour=Region),size=3) +
facet_grid(Region~.) +
stat_smooth() +
coord_cartesian(xlim=c(0.75,1))
sc + geom_point(aes(colour=Region),size=3) +
#facet_grid(Region~.) +
stat_smooth() +
coord_cartesian(xlim=c(0.75,1)) +
theme_minimal()
sc + geom_point(aes(colour=Region),size=3) +
#facet_grid(Region~.) +
stat_smooth() +
#coord_cartesian(xlim=c(0.75,1)) +
theme_minimal()
# ----------------------------------------------------------------------------
# Histogram (numerical, continuous data -> view frequency of observations)
titanic <- read.csv("titanic.csv",
stringsAsFactors = FALSE)
View(titanic)
str(titanic)
titanic$Survived <- as.factor(titanic$Survived)
titanic$Pclass <- as.factor(titanic$Pclass)
titanic$Sex <- as.factor(titanic$Sex)
titanic$Embarked <- as.factor(titanic$Embarked)
str(titanic)
# GGPLOT
hist <- ggplot(data=titanic,aes(x=Age))
hist + geom_histogram(binwidth=10,fill="White",colour="Blue")
hist + geom_histogram()
hist + geom_histogram(binwidth=5)
hist + geom_histogram(binwidth=5,colour="Blue") # 0-5,5-10,10-15 years old and so on...
hist + geom_histogram(binwidth=5,fill="White",colour="Blue")
hist + geom_histogram(binwidth=5,fill="White",colour="Blue") + geom_density()
hist + geom_histogram(binwidth=5,fill="White",colour="Blue") + geom_density()
hist + geom_histogram(binwidth=5,fill="White",colour="Blue")
hist + geom_histogram(binwidth=5,fill="White",colour="Blue",alpha=0.5)
hist + geom_histogram(binwidth=5,
fill="darkslategray4",colour="darkslategray",
alpha=0.5)
hist + geom_histogram(binwidth=5,
fill="darkslategray4",colour="darkslategray",
alpha=0.5) +
ggtitle("Passengers' Age aboard the Titanic")
hist + geom_histogram(binwidth=5,
fill="darkslategray4",colour="darkslategray",
alpha=0.5) +
ggtitle("Passengers' Age aboard the Titanic") +
theme(
plot.title = element_text(hjust = 0.5)
)
hist + geom_histogram(binwidth=5,
fill="darkslategray4",colour="darkslategray",
alpha=0.5) +
ggtitle("Age Distribution aboard the Titanic") +
theme(
plot.title = element_text(hjust = 0.5)
)
ggtitle("Age Distribution aboard the Titanic") +
theme(
plot.title = element_text(hjust = 0.5)
)
hist <- ggplot(data=titanic,aes(x=Age))
hist + geom_histogram(binwidth=5,
fill="darkslategray4",colour="darkslategray",
alpha=0.5) +
xlab("Age (Range of 5)") +
ylab("Number of Passengers")
ggtitle("Age Distribution aboard the Titanic") +
theme(
plot.title = element_text(hjust = 0.5)
)
ggtitle("Age Distribution aboard the Titanic") +
theme(
plot.title = element_text(hjust = 0.5)
)
ggtitle("Age Distribution aboard the Titanic") +
theme(
plot.title = element_text(hjust = 0.5)
)
hist <- ggplot(data=titanic,aes(x=Age))
hist + geom_histogram(binwidth=5,
fill="darkslategray4",colour="darkslategray",
alpha=0.5) +
ggtitle("Age Distribution aboard the Titanic") +
labs(y="Number of Passengers",x="Age") +
theme(
plot.title = element_text(hjust = 0.5)
)
hist + geom_histogram(binwidth=5,
fill="darkslategray4",colour="darkslategray",
alpha=0.5) +
ggtitle("Age Distribution aboard the Titanic") +
labs(y="Number of Passengers",x="Age") +
theme_minimal(
plot.title = element_text(hjust = 0.5)
)
hist <- ggplot(data=titanic,aes(x=Age))
hist + geom_histogram(binwidth=5,
fill="darkslategray4",colour="darkslategray",
alpha=0.5) +
ggtitle("Age Distribution aboard the Titanic") +
labs(y="Number of Passengers",x="Age") +
theme_minimal()
# Histogram Exercise
setwd(paste("C:\\Users\\Daniel.Inacio\\Desktop",
"\\R Programming for Statistics and Data Science",
"\\3. Visualizing Data\\Exercise1_Histogram",
sep=""))
employeeData <- read.csv("employee-data.csv",
stringsAsFactors = FALSE)
View(employeeData)
employeeData <- read.csv("employee-data.csv",
stringsAsFactors = FALSE)
View(employeeData)
View(employeeData)
histEmp <- ggplot(data=employeeData,aes(x=Salary))
hist + geom_histogram()
histEmp <- ggplot(data=employeeData,aes(x=Salary))
histEmp + geom_histogram()
histEmp <- ggplot(data=employeeData,aes(x=Salary))
histEmp + geom_histogram(binwidth=10)
histEmp <- ggplot(data=employeeData,aes(x=Salary))
histEmp + geom_histogram(binwidth=100)
histEmp <- ggplot(data=employeeData,aes(x=Salary))
histEmp + geom_histogram(binwidth=0.1)
